@page "/login"
@inject NavigationManager Navigation

@code {
    private string UserName { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    private async Task HandleLogin()
    {
        try
        {
            if (string.IsNullOrEmpty(UserName) || string.IsNullOrEmpty(Password))
            {
                ErrorMessage = "Please enter both username and password.";
                return;
            }

            // Simulate login logic
            var success = await AuthenticateUser(UserName, Password);

            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                ErrorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while logging in: {ex.Message}";
        }
    }

    private Task<bool> AuthenticateUser(string userName, string password)
    {
        // Simulate authentication logic (replace with actual)
        return Task.FromResult(userName == "admin" && password == "password");
    }
}

<div class="login-form">
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }

    <form @onsubmit="HandleLogin">
        <div class="form-group">
            <label for="userName">Username</label>
            <input type="text" class="form-control" id="userName" @bind="UserName" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" class="form-control" id="password" @bind="Password" />
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
    </form>
</div>
